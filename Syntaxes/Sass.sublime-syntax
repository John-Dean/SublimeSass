%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Sass
file_extensions: [sass]
scope: source.css.sass


variables:
  unicode: '\\\h{1,6}[ \t\n\f]?'
  escape: '(?:{{unicode}}|\\[^\n\f\h])'
  nonascii: '[\p{L}\p{M}\p{S}\p{N}&&[^[:ascii:]]]'
  nmstart: '(?:[[_a-zA-Z]{{nonascii}}]|{{escape}})'
  nmchar: '(?:[[-\w]{{nonascii}}]|{{escape}})'
  ident: '(?:--{{nmchar}}+|-?{{nmstart}}{{nmchar}}*)'
  combinators: '(?:>{1,3}|[~+])'

contexts:
  main:
    - include: comment-block
    - include: comment-line
    - include: commas
    - include: css-variables
    - include: literal-string
    - include: at-rules
    - include: selector
    - include: rule-list
    # - include: numeric-values
    - include: property-names
    - include: scss-declarations
    - include: scss-variables
    # - include: scss-functions
    # - include: scss-operators
    # - include: scss-parameters

  qualified-name:
    - match: '(?:({{ident}})|(\*))?([|])(?!=)'
      captures:
        1: entity.other.namespace-prefix.css
        2: entity.name.namespace.wildcard.css
        3: punctuation.separator.namespace.css

  commas:
    - match: '\s*(,)\s*'
      captures:
        1: punctuation.separator.css

  color-values:
    - match: \b(yellowgreen|yellow|whitesmoke|white|wheat|violet|turquoise|tomato|thistle|teal|tan|steelblue|springgreen|snow|slategrey|slategray|slateblue|skyblue|silver|sienna|seashell|seagreen|sandybrown|salmon|saddlebrown|royalblue|rosybrown|red|rebeccapurple|purple|powderblue|plum|pink|peru|peachpuff|papayawhip|palevioletred|paleturquoise|palegreen|palegoldenrod|orchid|orangered|orange|olivedrab|olive|oldlace|navy|navajowhite|moccasin|mistyrose|mintcream|midnightblue|mediumvioletred|mediumturquoise|mediumspringgreen|mediumslateblue|mediumseagreen|mediumpurple|mediumorchid|mediumblue|mediumaquamarine|maroon|linen|limegreen|lime|lightyellow|lightsteelblue|lightslategrey|lightslategray|lightskyblue|lightseagreen|lightsalmon|lightpink|lightgrey|lightgreen|lightgray|lightgoldenrodyellow|lightcyan|lightcoral|lightblue|lemonchiffon|lawngreen|lavenderblush|lavender|khaki|ivory|indigo|indianred|hotpink|honeydew|grey|greenyellow|green|gray|goldenrod|gold|ghostwhite|gainsboro|fuchsia|forestgreen|floralwhite|firebrick|dodgerblue|dimgrey|dimgray|deepskyblue|deeppink|darkviolet|darkturquoise|darkslategrey|darkslategray|darkslateblue|darkseagreen|darksalmon|darkred|darkorchid|darkorange|darkolivegreen|darkmagenta|darkkhaki|darkgrey|darkgreen|darkgray|darkgoldenrod|darkcyan|darkblue|crimson|cornsilk|cornflowerblue|coral|chocolate|chartreuse|cadetblue|burlywood|brown|blueviolet|blue|blanchedalmond|black|bisque|beige|azure|aquamarine|aqua|antiquewhite|aliceblue)\b
      comment: http://www.w3.org/TR/CSS21/syndata.html#value-def-color
      scope: support.constant.color.w3c-standard-color-name.css
    - match: (hsla?|rgba?)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.definition.group.begin.css
      push:
        - meta_scope: meta.group.css
        - match: '\)'
          scope: punctuation.definition.group.end.css
          pop: true
        - match: '(?x)\b(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\b)(\s*,\s*((0?\.[0-9]+)|[0-1]))?'
          scope: constant.other.color.rgb-value.css
        - match: '\b([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%'
          scope: constant.other.color.rgb-percentage.css
        - include: numeric-values

  comment-block:
    - match: /\*
      scope: punctuation.definition.comment.css
      push:
        - meta_scope: comment.block.css
        - match: \*/
          scope: punctuation.definition.comment.css
          pop: true

  comment-line:
    - match: //
      scope: punctuation.definition.comment.css
      push:
        - meta_scope: comment.line.double-slash.scss
        - match: \n
          pop: true

  at-rules:
    - match: (@)(for|each)\b
      scope: keyword.control.flow.scss
      captures:
        1: punctuation.definition.keyword.scss
    - match: (@)(if|else if|else)\b
      scope: keyword.control.flow.conditional.scss
      captures:
        1: punctuation.definition.keyword.scss
    - match: (@)(mixin|function|include)\s+([\w-]+)
      captures:
        1: punctuation.definition.keyword.scss
        2: keyword.control.at-rule.scss
        3: entity.name.function.scss
      push:
        - meta_scope: meta.at-rule.scss
        - match: '(?=$)'
          pop: true
        - include: scss-parameters
    - match: ((@)(?:-(?:webkit|moz|o)-)?(charset|import|namespace|page|font-face|supports|document)\b)
      captures:
        1: keyword.control.at-rule.css
        2: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.css
        - match: '(?=$)'
          pop: true
        - match: (url)(\()
          captures:
            1: meta.function-call.css support.function.url.css
            2: punctuation.definition.group.begin.css
          push:
            - meta_scope: meta.group.css
            - match: '\)'
              scope: punctuation.definition.group.end.css
              pop: true
            - include: literal-string
            - include: unquoted-string
        - include: comment-block
        - include: literal-string
        - include: scss-parameters
    - match: \s*((@)keyframes)(?=.*?)
      captures:
        1: keyword.control.at-rule.css
        2: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.keyframes.css
        - match: '(?=$)'
          pop: true
        - include: comment-block
        - match: '[a-zA-Z0-9_-]+'
          scope: variable.other.css
    - match: \s*((@)media)(?=\s+.*?)
      captures:
        1: keyword.control.at-rule.media.css
        2: punctuation.definition.keyword.css
        3: support.constant.media.css
      push:
        - meta_scope: meta.at-rule.media.css
        - match: '(?=$)'
          pop: true
        - include: comment-block
        - include: scss-operators
        - match: (?i)\s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|speech|tty|tv)?
          captures:
            1: keyword.operator.logic.media.css
            2: support.constant.media.css
        - match: '\('
          scope: punctuation.definition.group.begin.css
          push:
            - meta_scope: meta.group.css
            - match: '\)'
              scope: punctuation.definition.group.end.css
              pop: true
            - include: vendor-prefixes
            - match: |-
                (?x)
                (
                    ((min|max)-)?
                    (
                        ((device-)?(height|width|aspect-ratio|pixel-ratio))|
                        (color(-index)?)|monochrome|resolution
                    )
                )|grid|scan|orientation
                \s*(?=[:)])
              captures:
                0: support.type.property-name.media.css
            - match: \b(portrait|landscape|progressive|interlace)
              scope: support.constant.property-value.css
            - match: ':'
              scope: punctuation.separator.key-value.css
            - include: comment-block
            - include: comment-line
            - include: numeric-values
            - include: property-names
            - include: property-values
            - include: css-variables
            - include: scss-functions
            - include: scss-variables
            - include: scss-operators

  scss-data-uri:
    - match: (url)(\()(?=(data:|"data:|'data:))
      captures:
        1: support.function.misc.css
        2: punctuation.definition.group.begin.css
      push:
        - meta_scope: meta.group.css
        - match: '\)'
          scope: punctuation.definition.group.end.css
          pop: true
        - include: scss-interpolation
        - include: literal-string
        - include: unquoted-string

  scss-functions:
    - match: \b(zip|variable-exists|unquote|unitless|unit|unique-id|type-of|transparentize|to-upper-case|to-lower-case|tan|str-slice|str-length|str-insert|str-index|sqrt|spin|softlight|sin|simple-selectors|set-nth|selector-unify|selector-replace|selector-parse|selector-nest|selector-extend|selector-append|screen|scale-color|saturation|saturate|round|rgba|rgb|replace|red|random|quote|pow|pi|percentage|overlay|opacify|nth|negation|multiply|mod|mixin-exists|mix|min|max|map-values|map-remove|map-merge|map-keys|map-has-key|map-get|luma|list-separator|lightness|lighten|length|keywords|join|isnumber|is-superselector|is-bracketed|invert|inspect|index|if|ie-hex-str|hue|hsvvalue|hsvsaturation|hsvhue|hsva|hsv|hsla|hsl|hardlight|greyscale|green|grayscale|global-variable-exists|get-function|function-exists|format|floor|feature-exists|fadeout|fadein|fade|extract|exclusion|escape|e|difference|desaturate|data-uri|darken|cos|convert|contrast|content-exists|complement|comparable|color|change-color|ceil|call|calc|blue|average|atan|asin|argb|append|alpha|adjust-hue|adjust-color|acos|abs)(\()
      captures:
        1: support.function.scss
        2: meta.group.scss punctuation.definition.group.begin.scss
      push:
        - meta_scope: meta.function-call.scss
        - meta_content_scope: meta.group.scss meta.function.parameters.scss
        - match: '\)'
          scope: meta.group.scss punctuation.definition.group.end.scss
          pop: true
        - match: ':'
          scope: punctuation.separator.key-value.css
        - include: comment-block
        - include: commas
        - include: color-values
        - include: numeric-values
        - include: css-variables
        - include: scss-functions
        - include: scss-variables
        - include: scss-parameters
        - include: scss-interpolation
        - include: scss-operators
        - include: literal-string
        - include: unquoted-string

  scss-operators:
    - match: /|==|=|!=|<=|>=|<>|<|>|\-|\+|\*
      scope: keyword.operator.scss
    - match: (?:\s*)\b(not|or|and|when|from|to|through|in)(?=\s)
      captures:
        1: keyword.operator.scss

  scss-parameters:
    - match: '\('
      scope: punctuation.definition.group.begin.scss
      push:
        - meta_scope: meta.group.scss meta.function.parameters.scss
        - match: '\)'
          scope: punctuation.definition.group.end.scss
          pop: true
        - match: ':'
          scope: punctuation.separator.key-value.css
        - include: comment-line
        - include: comment-block
        - include: commas
        - include: color-values
        - include: numeric-values
        - include: css-variables
        - include: property-names
        - include: scss-functions
        - include: scss-parameters
        - include: scss-variables
        - include: scss-operators
        - include: literal-string
        - include: unquoted-string

  scss-declarations:
    - match: '(\$)([a-zA-Z0-9_-][\w-]*)'
      scope: variable.declaration.scss
      captures:
        1: punctuation.definition.variable.scss

  scss-interpolation:
    - match: '(#)({)'
      captures:
        1: punctuation.definition.variable.scss
        2: punctuation.definition.group.begin.scss
      push:
        - meta_scope: meta.group.interpolation.scss
        - match: '(})'
          scope: punctuation.definition.group.end.scss
          pop: true
        - include: numeric-values
        - include: scss-variables
        - include: scss-operators

  css-variables:
    - match: '\b(var)(?=\()'
      scope: support.function.var.css
      push:
        - meta_scope: meta.function-call.css
        - meta_content_scope: meta.group.css
        - match: '\)'
          scope: meta.group.css punctuation.definition.group.end.css
          pop: true
        - match: '(\()((--)({{nmchar}}+))'
          captures:
           1: punctuation.definition.group.begin.css
           2: support.type.custom-property.css
           3: punctuation.definition.custom-property.css
           4: support.type.custom-property.name.css

  scss-variables:
    - match: '(\$)([a-zA-Z0-9_-][\w-]*)'
      scope: variable.other.scss
      captures:
        1: punctuation.definition.variable.scss
    - include: scss-interpolation

  numeric-values:
    - match: '(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b'
      scope: constant.other.color.rgb-value.css
      captures:
        1: punctuation.definition.constant.css
    - match: '(?x)(?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))((?:vw|vmin|vmax|vh|turn|s|rem|rad|px|pt|pc|ms|mm|in|grad|fr|ex|em|dppx|dpi|dpcm|deg|cm|ch)\b|%)?'
      scope: constant.numeric.css
      captures:
        1: keyword.other.unit.css

  vendor-prefixes:
    - match: '(-webkit-|-o-|-ms-|-moz-|-khtml-)(?=[A-Za-z])'
      scope: support.type.vendor-prefix.css

  property-names:
    - include: comment-block
    - include: vendor-prefixes
    - match: '(--)({{nmchar}}+)'
      scope: support.type.custom-property.css
      captures:
        1: punctuation.definition.custom-property.css
        2: support.type.custom-property.name.css
    # Property names in reverse alphabetical order,
    # includes partial "name spaces" e.g. "font-weight" and "font", "weight"
    # http://sass-lang.com/documentation/file.SASS_REFERENCE.html#nested_properties
    - match: |-
        \b(?x)(
            display|width|background-color|height|position|font-family|font-weight
          | top|opacity|cursor|background-image|right|visibility|box-sizing
          | user-select|left|float|margin-left|margin-top|line-height
          | padding-left|z-index|margin-bottom|margin-right|margin
          | vertical-align|padding-top|white-space|border-radius|padding-bottom
          | padding-right|padding|bottom|clear|max-width|box-shadow|content
          | border-color|min-height|min-width|font-style|border-width
          | border-collapse|background-size|text-overflow|max-height|text-transform
          | text-shadow|text-indent|border-style|overflow-y|list-style-type
          | word-wrap|border-spacing|appearance|zoom|overflow-x|border-top-left-radius
          | border-bottom-left-radius|border-top-color|pointer-events
          | border-bottom-color|align-items|justify-content|letter-spacing
          | border-top-right-radius|border-bottom-right-radius|border-right-width
          | font-smoothing|border-bottom-width|border-right-color|direction
          | border-top-width|src|border-left-color|border-left-width
          | tap-highlight-color|table-layout|background-clip|word-break
          | transform-origin|resize|filter|backface-visibility|text-rendering
          | box-orient|transition-property|transition-duration|word-spacing
          | quotes|outline-offset|animation-timing-function|animation-duration
          | animation-name|transition-timing-function|border-bottom-style
          | border-bottom|transition-delay|transition|unicode-bidi|border-top-style
          | border-top|unicode-range|list-style-position|orphans|outline-width
          | line-clamp|order|flex-direction|box-pack|animation-fill-mode
          | outline-color|list-style-image|list-style|touch-action|flex-grow
          | border-left-style|border-left|animation-iteration-count
          | page-break-inside|box-flex|box-align|page-break-after|animation-delay
          | widows|border-right-style|border-right|flex-align|outline-style
          | outline|background-origin|animation-direction|fill-opacity
          | background-attachment|flex-wrap|transform-style|counter-increment
          | overflow-wrap|counter-reset|animation-play-state|animation
          | will-change|box-ordinal-group|image-rendering|mask-image|flex-flow
          | background-position-y|stroke-width|background-position-x|background-position
          | background-blend-mode|flex-shrink|flex-basis|flex-order|flex-item-align
          | flex-line-pack|flex-negative|flex-pack|flex-positive|flex-preferred-size
          | flex|user-drag|font-stretch|column-count|empty-cells|align-self
          | caption-side|mask-size|column-gap|mask-repeat|box-direction
          | font-feature-settings|mask-position|align-content|object-fit
          | columns|text-fill-color|clip-path|stop-color|font-kerning
          | page-break-before|stroke-dasharray|size|fill-rule|border-image-slice
          | column-width|break-inside|column-break-before|border-image-width
          | stroke-dashoffset|border-image-repeat|border-image-outset|line-break
          | stroke-linejoin|stroke-linecap|stroke-miterlimit|stroke-opacity
          | stroke|shape-rendering|border-image-source|border-image|border
          | tab-size|writing-mode|perspective-origin-y|perspective-origin-x
          | perspective-origin|perspective|text-align-last|text-align|clip-rule
          | clip|text-anchor|column-rule-color|box-decoration-break|column-fill
          | fill|column-rule-style|mix-blend-mode|text-emphasis-color
          | baseline-shift|dominant-baseline|page|alignment-baseline
          | column-rule-width|column-rule|break-after|font-variant-ligatures
          | transform-origin-y|transform-origin-x|transform|object-position
          | break-before|column-span|isolation|shape-outside|all
          | color-interpolation-filters|marker|marker-end|marker-start
          | marker-mid|color-rendering|color-interpolation|background-repeat-x
          | background-repeat-y|background-repeat|background|mask-type
          | flood-color|flood-opacity|text-orientation|mask-composite
          | text-emphasis-style|paint-order|lighting-color|shape-margin
          | text-emphasis-position|text-emphasis|shape-image-threshold
          | mask-clip|mask-origin|mask|font-variant-caps|font-variant-alternates
          | font-variant-east-asian|font-variant-numeric|font-variant-position
          | font-variant|font-size-adjust|font-size|font-language-override
          | font-display|font-synthesis|font|line-box-contain|text-justify
          | text-decoration-color|text-decoration-style|text-decoration-line
          | text-decoration|text-underline-position|grid-template-rows
          | grid-template-columns|grid-template-areas|grid-template|rotate|scale
          | translate|scroll-behavior|grid-column-start|grid-column-end
          | grid-column-gap|grid-row-start|grid-row-end|grid-auto-rows
          | grid-area|grid-auto-flow|grid-auto-columns|image-orientation
          | hyphens|overflow-scrolling|overflow|color-profile|kerning
          | nbsp-mode|color|image-resolution|grid-row-gap|grid-row|grid-column
          | blend-mode|azimuth|pause-after|pause-before|pause|pitch-range|pitch
          | text-height|system|negative|prefix|suffix|range|pad|fallback
          | additive-symbols|symbols|speak-as|speak|grid-gap
        )\b
      scope: meta.property-name.css support.type.property-name.css
    - match: '\b(animation-name|animation)\b'
      scope: meta.property-name.css support.type.property-name.css
      push:
        - meta_content_scope: meta.property-value.css
        - match: '\s*(?=;|(?=[{}]))'
          pop: true
        - match: ':'
          scope: punctuation.separator.key-value.css
        - include: comment-block
        - include: comment-line
        - include: property-values
        - match: '[a-zA-Z0-9_-]+'
          scope: variable.other.css

  property-values:
    - match: '\('  # maps
      captures:
        0: punctuation.definition.group.begin.scss
      push:
        - meta_scope: meta.group.css meta.function.parameters.css
        - match: '\)'
          captures:
            0: punctuation.definition.group.end.scss
          pop: true
        - match: '{{ident}}'
          scope: variable.parameter.scss
        - match: ':'
          scope: punctuation.separator.key-value.css
        - include: comment-line
        - include: commas
        - include: property-values

    - match: \!\s*important
      scope: keyword.other.important.css
    - match: \!\s*(default|global|optional)
      scope: keyword.other.scss
    - include: comment-block
    - include: vendor-prefixes
    - include: color-values
    - include: numeric-values
    - include: css-variables
    - include: scss-variables
    - include: scss-data-uri
    - include: scss-functions
    - match: \b(wrap-reverse|wrap|whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|unicase|underline|ultra-expanded|ultra-condensed|transparent|transform|top|titling-caps|thin|thick|text-top|text-bottom|text|tb-rl|table-row-group|table-row|table-header-group|table-footer-group|table-column-group|table-column|table-cell|table|sw-resize|super|subpixel-antialiased|strict|stretch|step-start|step-end|static|start|sRGB|square|square|space-between|space-around|space|solid|soft-light|small-caps|separate|semi-expanded|semi-condensed|se-resize|scroll|screen|scale-down|saturation|s-resize|running|rtl|row-reverse|row-resize|row|round|round|right|ridge|reverse|repeat-y|repeat-x|repeat|relative|progressive|progress|pre-wrap|pre-line|pre|pointer|petite-caps|paused|pan-y|pan-x|pan-up|pan-right|pan-left|pan-down|padding-box|overline|overlay|outside|outset|optimizeSpeed|optimizeSpeed|optimizeQuality|optimizeLegibility|open-quote|opacity|oblique|nw-resize|nowrap|not-allowed|normal|nonzero|none|no-repeat|no-open-quote|no-drop|no-close-quote|newspaper|ne-resize|n-resize|multiply|move|miter|middle|middle|medium|max-height|manipulation|main-size|luminosity|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|local|list-item|linearRGB|linear(?!-)|line-through|line-edge|line|lighter|lighten|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline-block|inline|inherit|infinite|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|hue|horizontal|hidden|help|hard-light|hand|groove|geometricPrecision |geometricPrecision|forwards|flex-start|flex-end|flex|fixed|extra-expanded|extra-condensed|expanded|exclusion|evenodd |end |ellipsis|ease-out|ease-in-out|ease-in|ease|e-resize|double|dotted|distribute-space|distribute-letter|distribute-all-lines|distribute|disc|disabled|difference|default|decimal|dashed|darken|currentColor|crosshair|crispEdges|cover|content-box|contain|condensed|column-reverse|column|color-dodge|color-burn|color|collapse|col-resize|close-quote|circle|char|center|capitalize|butt|break-word|break-all|bottom|both|border-box|bolder|bold|block|bidi-override|bevel|below|baseline|balance|backwards|auto|antialiased|always|alternate-reverse|alternate|all-small-caps|all-scroll|all-petite-caps|all|absolute)(?![-])\b
      scope: support.constant.property-value.css
    - match: (\b(?i:webdings|verdana|utopia|trebuchet|times|tahoma|system|symbol|serif|sans-serif|monospace|lucida|impact|helvetica|georgia|garamond|futura|fantasy|cursive|courier|comic|century|arial)\b)
      scope: support.constant.font-name.css
    - match: (rect)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.definition.group.begin.css
      push:
        - meta_scope: meta.group.css
        - match: '\)'
          scope: punctuation.definition.group.end.css
          pop: true
        - include: numeric-values
    - match: '(whiteness|url-prefix|url|translate[XYZ]|translate3d|translate|tint|skew[XY]|skew|shade|sepia|scale[XYZ]|scale|saturation|saturate|rotate[XYZ]|rotate3d|rotate|rgba|rgb|repeating-radial-gradient|repeating-linear-gradient|regexp|rect|radial-gradient|opacity|minmax|matrix3d|matrix|local|linear-gradient|lightness|invert|image-set|image|hsla|hsl|grayscale|gray|format|drop-shadow|domain|device-cmyk|cubic-bezier|cross-fade|counters|counter|contrast|color|brightness|blur|blenda|blend|blackness|attr)\s*(\()'
      captures:
        1: support.function.css
        2: meta.group.css punctuation.definition.group.begin.css
      push:
        - meta_scope: meta.function-call.css
        - meta_content_scope: meta.group.css meta.function.parameters.css
        - match: '\)'
          scope: meta.group.css punctuation.definition.group.end.css
          pop: true
        - include: color-values
        - include: numeric-values
        - include: css-variables
        - include: scss-variables
        - include: scss-functions
        - include: scss-operators
        - include: literal-string
        - include: unquoted-string
    - include: literal-string
    - include: unquoted-concatenated-string
    - include: scss-operators
    - include: property-names

  rule-list:
    - match: ':'
      captures:
        0: punctuation.separator.key-value.css
      push:
        - match: '(?:$)'
          pop: true
        - include: property-names
        - match: '\s+'
          push:
          - match: '(?:$)'
            pop: true
          - meta_content_scope: meta.property-value.css
          - include: property-values

  selector:
    - include: scss-interpolation
      # Combinators
      # https://drafts.csswg.org/selectors-4/#combinators
      # https://drafts.csswg.org/css-scoping/#deep-combinator
    - match: '\s*({{combinators}})(?![>~+])\s*'
      scope: meta.selector.css
      captures:
        1: punctuation.separator.combinator.css
    - match: '\s*(&)'
      captures:
        1: keyword.operator.ampersand.scss
      push:
        - meta_scope: meta.selector.css
        - match: '\s'
          pop: true
        - include: selector
        # &-selector for BEM-ish classnames
        - match: '(-+|_+)[a-zA-Z_][a-zA-Z0-9_-]*'
          scope: entity.other.attribute-name.css
    - match: '\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|content|data|datalist|dd|del|details|dfn|dir|dialog|div|dl|dt|element|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i|iframe|img|input|ins|isindex|kbd|keygen|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|rtc|s|samp|script|section|select|shadow|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr|xmp|circle|clipPath|defs|ellipse|filter|foreignObject|g|glyph|glyphRef|image|line|linearGradient|marker|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|switch|symbol|text|textPath|tref|tspan|use)\b\s*(?=([a-z.,+{#\s\[\)]|:+[a-z]|$))'
      scope: meta.selector.css
      captures:
        1: entity.name.tag.css
    - match: '(\.)(?=-?([a-zA-Z_]|#{)[a-zA-Z0-9_-]*)'
      captures:
        1: punctuation.definition.entity.css
      push:
        - meta_scope: meta.selector.css entity.other.attribute-name.class.css
        - include: scss-interpolation
        - match: '(?=[^a-zA-Z0-9_-])'
          pop: true
    - match: "(#)(?=-?([a-zA-Z_]|#{)[a-zA-Z0-9_-]*)"
      captures:
        1: punctuation.definition.entity.css
      push:
        - meta_scope: meta.selector.css entity.other.attribute-name.id.css
        - include: scss-interpolation
        - match: '(?=[^a-zA-Z0-9_-])'
          pop: true
    - match: "(%)(?=-?([a-zA-Z_]|#{)[a-zA-Z0-9_-]*)"
      captures:
        1: punctuation.definition.entity.css
      push:
        - meta_scope: meta.selector.css entity.other.attribute-name.placeholder.css
        - include: scss-interpolation
        - match: '(?=[^a-zA-Z0-9_-])'
          pop: true
    - match: '\*'
      scope: entity.name.tag.wildcard.css
    - match: (:)(visited|valid|target|scope|root|right|required|read-write|read-only|out-of-range|optional|only-of-type|only-child|link|left|last-of-type|last-child|invalid|indeterminate|in-range|hover|fullscreen|focus|first-of-type|first-child|first|enabled|empty|disabled|default|checked|any|active)\b
      scope: meta.selector.css entity.other.pseudo-class.css
      captures:
        1: punctuation.definition.entity.css
    - match: (:)(extend)\b
      scope: meta.selector.css entity.other.pseudo-class.scss
      captures:
        1: punctuation.definition.entity.css
    - match: ((:)not|lang|dir)(\()
      captures:
        1: entity.other.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.definition.group.begin.css
      push:
        - meta_scope: meta.selector.css meta.group.css
        - match: '\)'
          scope: punctuation.definition.group.end.css
          pop: true
        - include: selector
    - match: ((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(?=\()
      captures:
        1: entity.other.pseudo-class.css
        2: punctuation.definition.entity.css
      push:
        - meta_scope: meta.selector.css
        - match: '\)'
          scope: meta.group.css punctuation.definition.group.end.css
          pop: true
        - match: '\('
          scope: meta.group.css punctuation.definition.group.begin.css
        - match: '[+-]'
          scope: keyword.operator.css
        - match: '[0-9]+(n*)'
          scope: meta.group.css constant.numeric.css
          captures:
            1: keyword.other.unit.css
    - match: (:|::)(selection|first-line|first-letter|before|backdrop|after)\b
      scope: meta.selector.css entity.other.pseudo-element.css
      captures:
        1: punctuation.definition.entity.css
    - match: '\['
      scope: punctuation.definition.entity.css
      push:
        - meta_scope: meta.attribute-selector.css
        - include: qualified-name
        - match: '({{ident}})'
          scope: entity.other.attribute-name.css
        - match: '\s*([~*|^$]?=)\s*'
          captures:
            1: keyword.operator.attribute-selector.css
          push:
            - include: literal-string
            - include: unquoted-string
            - match: '(?=(\s|\]))'
              pop: true
        - match: '(?:\s+([iI]))?'  # case insensitive flag
          captures:
            1: keyword.other.css
        - match: '\]'
          scope: punctuation.definition.entity.css
          pop: true

  unquoted-concatenated-string:
    # cases:
    # unquoted string +
    # + unquoted string
    # unquoted string + unquoted string
    - match: '([a-zA-Z_-]+)\s+(\+)\s+([a-zA-Z_-]+)|(\+)\s+([a-zA-Z_-]+)|([a-zA-Z_-]+)\s+(\+)'
      captures:
        1: string.unquoted.css
        2: keyword.operator.scss
        3: string.unquoted.css
        4: keyword.operator.scss
        5: string.unquoted.css
        6: string.unquoted.css
        7: keyword.operator.scss

  unquoted-string:
    - match: '[^\s\]\[''"]'
      scope: string.unquoted.css

  literal-string:
    - match: "'"
      scope: punctuation.definition.string.begin.css
      push:
        - meta_scope: string.quoted.single.css
        - match: (')|(\n)
          captures:
            1: punctuation.definition.string.end.css
            2: invalid.illegal.newline.css
          pop: true
        - include: string-content
    - match: '"'
      scope: punctuation.definition.string.begin.css
      push:
        - meta_scope: string.quoted.double.css
        - match: (")|(\n)
          captures:
            1: punctuation.definition.string.end.css
            2: invalid.illegal.newline.css
          pop: true
        - include: string-content

  string-content:
    - match: \\\s*\n
      scope: constant.character.escape.newline.css
    - match: '\\(\h{1,6}|.)'
      scope: constant.character.escape.css
    - include: scss-interpolation
